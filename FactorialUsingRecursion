package edu.clemson.pallavi.commonCode;

public class FactorialUsingRecursion {
	static int factorial(int n){//A static method can be invoked without creating an instance(Object) of a class.
		  if (n == 0)    
		    return 1;    
		  else    
		    return(n * factorial(n-1));    
		 }    
		 public static void main(String args[]){//A static method can be invoked without creating an instance(Object) of a class.  
		  int fact=1;  
		  int number=4;//It is the number to calculate factorial    
		  fact = factorial(number);   
		  System.out.println("Factorial of "+number+" is: "+fact);    
		 }  
}

/*USING OBJECTS
public class FactorialUsingRecursion {
	 int factorial(int n) {
		if (n == 0)
			return 1;
		else
			return (n * factorial(n - 1));
	}

	public static void main(String args[]) {
		int fact = 1;
		FactorialUsingRecursion f= new FactorialUsingRecursion();
		int number = 4;// It is the number to calculate factorial
		fact = f.factorial(number);
		System.out.println("Factorial of " + number + " is: " + fact);
	}
}
*/
